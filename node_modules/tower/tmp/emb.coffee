require 'ember-metal'
require 'ember-runtime'

global.window = global

# doesn't work:
# Ember.Object.__extend = -> @extend arguments...

Ember.Object.reopenClass
  __extend: ->
    @extend arguments...
    
  __defineStaticProperty: (key, value) ->
    object = {}
    object[key] = value
    @reopenClass(object)
    
  __defineProperty: (key, value) ->
    object = {}
    object[key] = value
    @reopen(object)
  
A1 = Ember.Object.extend()
#A1.__extend = A1.extend
B1 = A1.extend()
C1 = B1.extend()
C2 = B1.extend()
B2 = A1.extend()
C3 = B2.extend()
C4 = B2.extend()

#class Model extends Base
result = []
result.push A1.subclasses.contains(B1) # true
result.push A1.subclasses.contains(B2) # true 
result.push A1.subclasses.contains(C1) # false
result.push A1.subclasses.contains(C2) # false
result.push B1.subclasses.contains(C1) # true
result.push B1.subclasses.contains(C2) # true
result.push B1.subclasses.contains(C3) # false
result.push B1.subclasses.contains(C4) # false
  
console.log result
  
class _B1 extends A1
  @aClassVariable: "aClassVariable!!!"
  @aClassMethod: -> "aClassMethod!!!"
  aVariable: "aVariable!!!"
  aMethod: -> "aMethod!!!"
  
class _C1 extends _B1
class _C2 extends _B1
class _B2 extends A1
class _C3 extends _B2
class _C4 extends _B2

result = []
result.push A1.subclasses.contains(_B1) # true
result.push A1.subclasses.contains(_B2) # true 
result.push A1.subclasses.contains(_C1) # false
result.push A1.subclasses.contains(_C2) # false
result.push _B1.subclasses.contains(_C1) # true
result.push _B1.subclasses.contains(_C2) # true
result.push _B1.subclasses.contains(_C3) # false
result.push _B1.subclasses.contains(_C4) # false

console.log result

console.log _C1.aClassVariable
console.log _C1.aClassMethod()
_c1 = new _C1
console.log _c1.aVariable
console.log _c1.aMethod()