var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

App.TestJsonController = (function(_super) {
  var method, methods, proto, _fn, _i, _len;

  __extends(TestJsonController, _super);

  TestJsonController.name = 'TestJsonController';

  function TestJsonController() {
    return TestJsonController.__super__.constructor.apply(this, arguments);
  }

  methods = ["default", "post"];

  _fn = function(method, proto) {
    return proto["" + method + "Method"] = function() {
      var _this = this;
      return this.respondTo(function(format) {
        format.json(function() {
          return _this.render({
            json: _this.params.data || {
              value: "" + method + "Method in JSON"
            }
          });
        });
        return format.html(function() {
          return _this.render({
            text: "" + method + "Method in HTML"
          });
        });
      });
    };
  };
  for (_i = 0, _len = methods.length; _i < _len; _i++) {
    method = methods[_i];
    proto = TestJsonController.prototype;
    _fn(method, proto);
  }

  return TestJsonController;

})(Tower.Controller);
