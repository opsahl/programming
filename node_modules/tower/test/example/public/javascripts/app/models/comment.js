var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

App.Comment = (function(_super) {

  __extends(Comment, _super);

  Comment.name = 'Comment';

  function Comment() {
    return Comment.__super__.constructor.apply(this, arguments);
  }

  Comment.belongsTo("commentable", {
    embed: true,
    polymorphic: true
  });

  Comment.belongsTo("commenter", {
    type: "User"
  });

  Comment.belongsTo("embeddingPost", {
    type: "Post",
    embed: true
  });

  Comment.belongsTo("referencedPost", {
    type: "Post"
  });

  return Comment;

})(Tower.Model);
