var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

App.Page = (function(_super) {

  __extends(Page, _super);

  Page.name = 'Page';

  function Page() {
    return Page.__super__.constructor.apply(this, arguments);
  }

  Page.field("title");

  Page.field("rating", {
    type: "Integer"
  });

  Page.field("type");

  Page.field("tags", {
    type: ["String"],
    "default": []
  });

  Page.field("meta", function() {
    return this.field({
      "priority": 1
    });
  });

  Page.validates("rating", {
    min: 0,
    max: 10
  });

  Page.belongsTo("user", {
    idCache: true
  });

  Page.hasMany("comments", {
    as: "commentable",
    type: "Comment"
  });

  Page.hasMany("commenters", {
    through: "comments",
    type: "User"
  });

  Page.hasMany("embeddedComments", {
    as: "commentable",
    type: "Comment",
    embed: true
  });

  Page.hasMany("referencedComments", {
    as: "commentable",
    type: "Comment"
  });

  Page.timestamps();

  return Page;

})(Tower.Model);
