var controller, router, user;

controller = null;

user = null;

router = null;

if (!Tower.client) {
  describe('Tower.Controller.Rendering', function() {
    beforeEach(function(done) {
      return Tower.start(done);
    });
    afterEach(function() {
      return Tower.stop();
    });
    test('renderCoffeeKupFromTemplate', function(done) {
      return _.get('/custom/renderCoffeeKupFromTemplate', function() {
        assert.equal(this.body, "<h1>Hello World</h1>\n");
        assert.equal(this.headers["Content-Type"], "text/html");
        return done();
      });
    });
    test('renderHelloWorldFromVariable', function(done) {
      return _.get('/custom/renderHelloWorldFromVariable', function() {
        assert.equal(this.person, "david");
        assert.equal(this.body, "hello david");
        return done();
      });
    });
    test('renderWithExplicitStringTemplateAsAction', function(done) {
      return _.get('/custom/renderWithExplicitStringTemplateAsAction', function() {
        assert.equal(this.body, "<h1>Hello World!!!</h1>\n");
        return done();
      });
    });
    test('renderActionUpcasedHelloWorld', function(done) {
      return _.get('/custom/renderActionUpcasedHelloWorld', function() {
        assert.equal(this.body, "<h1>renderActionUpcasedHelloWorld</h1>\n");
        return done();
      });
    });
    test('renderActionUpcasedHelloWorldAsString', function(done) {
      return _.get('/custom/renderActionUpcasedHelloWorldAsString', function() {
        assert.equal(this.body, "<h1>renderActionUpcasedHelloWorld</h1>\n");
        return done();
      });
    });
    test('renderJsonHelloWorld', function(done) {
      return _.get('/custom/renderJsonHelloWorld', function() {
        assert.equal(this.body, JSON.stringify({
          hello: "world"
        }));
        assert.equal(this.headers["Content-Type"], "application/json");
        return done();
      });
    });
    test('renderJsonHelloWorldWithParams', function(done) {
      return _.get('/custom/renderJsonHelloWorldWithParams', {
        params: {
          hello: "world"
        }
      }, function() {
        assert.equal(this.body, JSON.stringify({
          hello: "world"
        }));
        assert.equal(this.headers["Content-Type"], "application/json");
        assert.equal(this.status, 200);
        return done();
      });
    });
    return test('renderJsonHelloWorldWithStatus', function(done) {
      return _.get('/custom/renderJsonHelloWorldWithStatus', function() {
        assert.equal(this.body, JSON.stringify({
          hello: "world"
        }));
        assert.equal(this.headers["Content-Type"], "application/json");
        assert.equal(this.status, 401);
        return done();
      });
    });
  });
}
