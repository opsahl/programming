var describeWith;

describeWith = function(store) {
  return describe('Tower.HTTP.Param', function() {
    describe('Date', function() {
      var param;
      param = null;
      beforeEach(function() {
        return param = Tower.HTTP.Param.create("createdAt", {
          type: "Date"
        });
      });
      test('exact date', function() {
        var criteria;
        criteria = param.toCriteria("12-25-2012");
        return assert.deepEqual(criteria.conditions(), {
          "createdAt": Tower.date("12-25-2012")
        });
      });
      test('date range with start and end', function() {
        var criteria;
        criteria = param.toCriteria("12-25-2012..12-31-2012");
        return assert.deepEqual(criteria.conditions(), {
          "createdAt": {
            "$gte": Tower.date("12-25-2012"),
            "$lte": Tower.date("12-31-2012")
          }
        });
      });
      test('date range with start and NO end', function() {
        var criteria;
        criteria = param.toCriteria("12-25-2012..t");
        return assert.deepEqual(criteria.conditions(), {
          "createdAt": {
            "$gte": Tower.date("12-25-2012")
          }
        });
      });
      test('date range with NO start but WITH an end', function() {
        var criteria;
        criteria = param.toCriteria("t..12-31-2012");
        return assert.deepEqual(criteria.conditions(), {
          "createdAt": {
            "$lte": Tower.date("12-31-2012")
          }
        });
      });
      return test('exact datetime', function() {
        var criteria, datetime;
        datetime = "01-12-2012@3:25:50";
        criteria = param.toCriteria(datetime);
        return assert.deepEqual(criteria.conditions(), {
          "createdAt": Tower.date(datetime)
        });
      });
    });
    return describe('Number', function() {
      var param;
      param = null;
      beforeEach(function() {
        return param = Tower.HTTP.Param.create("likeCount", {
          type: "Number"
        });
      });
      test('exact number `12`', function() {
        var criteria;
        criteria = param.toCriteria("12");
        return assert.deepEqual(criteria.conditions(), {
          "likeCount": 12.0
        });
      });
      test('number range with start and end `12..80`', function() {
        var criteria;
        criteria = param.toCriteria("12..80");
        return assert.deepEqual(criteria.conditions(), {
          "likeCount": {
            "$gte": 12,
            "$lte": 80
          }
        });
      });
      test('number range with start and NO end `12..n`', function() {
        var criteria;
        criteria = param.toCriteria("12..n");
        return assert.deepEqual(criteria.conditions(), {
          "likeCount": {
            "$gte": 12
          }
        });
      });
      return test('number range with NO start but WITH an end `n..80`', function() {
        var criteria;
        criteria = param.toCriteria("n..80");
        return assert.deepEqual(criteria.conditions(), {
          "likeCount": {
            "$lte": 80
          }
        });
      });
    });
  });
};

describeWith(Tower.Store.Memory);

if (!Tower.client) {
  describeWith(Tower.Store.MongoDB);
}
