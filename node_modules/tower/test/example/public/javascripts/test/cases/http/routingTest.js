
describe("Tower.Dispatch.Route", function() {
  return describe("dsl", function() {
    beforeEach(function() {
      Tower.Route.clear();
      return Tower.Route.draw(function() {
        this.match("/login", {
          to: "sessions#new",
          via: "get",
          as: "login",
          defaults: {
            flow: "signup"
          },
          constraints: {
            subdomain: /www/
          }
        });
        this.match("/users", {
          to: "users#index",
          via: "get"
        });
        this.match("/users/:id/edit", {
          to: "users#edit",
          via: "get"
        });
        this.match("/users/:id", {
          to: "users#show",
          via: "get"
        });
        this.match("/users", {
          to: "users#create",
          via: "post"
        });
        this.match("/users/:id", {
          to: "users#update",
          via: "put"
        });
        return this.match("/users/:id", {
          to: "users#destroy",
          via: "delete"
        });
      });
    });
    it("should map", function() {
      var route, routes;
      routes = Tower.Route.all();
      assert.equal(routes.length, 7);
      route = routes[0];
      assert.equal(route.path, "/login.:format?");
      assert.equal(route.controller.name, "SessionsController");
      assert.equal(route.controller.className, "SessionsController");
      assert.equal(route.controller.action, "new");
      assert.equal(route.methods[0], "GET");
      assert.equal(route.name, "login");
      return assert.deepEqual(route.defaults, {
        flow: "signup"
      });
    });
    return it("should be found in the router", function() {
      var controller, request, router;
      router = Tower.Middleware.Router;
      request = {
        method: "get",
        url: "http://www.local.host:3000/login",
        header: function() {}
      };
      return controller = router.find(request, {}, function(controller) {
        assert.deepEqual(request.params, {
          flow: 'signup',
          format: "html",
          action: 'new'
        });
        return assert.deepEqual(controller.params, {
          flow: 'signup',
          format: "html",
          action: 'new'
        });
      });
    });
  });
});
